// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrabajoWebAhoraSi.Data;

#nullable disable

namespace TrabajoWebAhoraSi.Migrations
{
    [DbContext(typeof(TrabajoWebAhoraSiContext))]
    partial class TrabajoWebAhoraSiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrabajoWebAhoraSi.Models.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoId"), 1L, 1);

                    b.Property<string>("Nombre_de_Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SueldoID")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_de_Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CargoId");

                    b.HasIndex("SueldoID");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("TrabajoWebAhoraSi.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaDeContratacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("TrabajoWebAhoraSi.Models.Sueldo", b =>
                {
                    b.Property<int>("SueldoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SueldoID"), 1L, 1);

                    b.Property<int>("Bono")
                        .HasColumnType("int");

                    b.Property<int>("DescuentoIV")
                        .HasColumnType("int");

                    b.Property<int>("DescuentoSeguro")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.HasKey("SueldoID");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Sueldo");
                });

            modelBuilder.Entity("TrabajoWebAhoraSi.Models.Cargo", b =>
                {
                    b.HasOne("TrabajoWebAhoraSi.Models.Sueldo", "Sueldo")
                        .WithMany()
                        .HasForeignKey("SueldoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sueldo");
                });

            modelBuilder.Entity("TrabajoWebAhoraSi.Models.Sueldo", b =>
                {
                    b.HasOne("TrabajoWebAhoraSi.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });
#pragma warning restore 612, 618
        }
    }
}
